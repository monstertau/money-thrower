{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is API Documentation of Money Thrower Core",
        "title": "Money Thrower Core API",
        "contact": {
            "name": "Trung Dung Vu",
            "email": "trungdungvu172@gmail.com"
        },
        "version": "1.0"
    },
    "host": "api.moneythrower.site",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login with email and password",
                "parameters": [
                    {
                        "description": "Login with account",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.LoginForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Logout and push JWT Token into blacklist for 72 hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout and push JWT Token into blacklist for 72 hours",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Register with email and password",
                "parameters": [
                    {
                        "description": "Register with account",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.RegisterForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        },
        "/dummy": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Dummy test connection and token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "testing"
                ],
                "summary": "Dummy test connection and token",
                "responses": {
                    "200": {
                        "description": "message\": \"Hello World\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/password/change": {
            "post": {
                "description": "Submit token, new password, email to reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "password management"
                ],
                "summary": "Submit token, new password, email to reset password",
                "parameters": [
                    {
                        "description": "Submit token, new password, email to reset password",
                        "name": "ForgotPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.SubmitNewPasswordForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": true}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        },
        "/password/forgot": {
            "post": {
                "description": "Submit email for sending reset password email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "password management"
                ],
                "summary": "Submit email for sending reset password email",
                "parameters": [
                    {
                        "description": "Submit email for reset password (Must be valid email)",
                        "name": "ForgotPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.ForgotPasswordForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": true}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        },
        "/transaction": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get list of transactions based on filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get list of transactions based on filter",
                "parameters": [
                    {
                        "description": "Get filtered transaction list",
                        "name": "create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.FilterTransactionForm"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "limit of list transactions want to specify, default 10",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset of list transactions want to specify, default 0",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.TransactionForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        },
        "/transaction/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get detail information of a transaction by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get detail information of a transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.TransactionForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Delete a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        },
        "/wallet": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Edit info of a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Edit info of a wallet",
                "parameters": [
                    {
                        "description": "Update wallet",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.WalletForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.WalletForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Add a new wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Add a new wallet",
                "parameters": [
                    {
                        "description": "Create wallet",
                        "name": "create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.WalletForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.WalletForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.AppError": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "null"
                    ]
                },
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "invalid form"
                }
            }
        },
        "view.FilterTransactionForm": {
            "type": "object",
            "properties": {
                "cat_id": {
                    "type": "string",
                    "example": "f3b91567-3496-4d9b-9f1e-ca69c92b89a6"
                },
                "end_amount": {
                    "type": "number",
                    "example": 999999
                },
                "end_date": {
                    "type": "integer",
                    "example": 4102444799
                },
                "key_note": {
                    "type": "string",
                    "example": "mua"
                },
                "start_amount": {
                    "type": "number",
                    "example": 1
                },
                "start_date": {
                    "type": "integer",
                    "example": -315619200
                },
                "wallet_id": {
                    "type": "string",
                    "example": "dda1d792-337b-476b-adbc-f81b06baa0d0"
                }
            }
        },
        "view.ForgotPasswordForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                }
            }
        },
        "view.LoginForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "test"
                }
            }
        },
        "view.RegisterForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "password": {
                    "type": "string",
                    "example": "test"
                },
                "token": {
                    "type": "string",
                    "example": "token-string"
                }
            }
        },
        "view.SubmitNewPasswordForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "test"
                },
                "token": {
                    "type": "string",
                    "example": "token-string"
                }
            }
        },
        "view.TransactionForm": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "cat_id": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "transaction_date": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "view.WalletForm": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 1500000
                },
                "currency": {
                    "type": "string",
                    "example": "VND"
                },
                "icon": {
                    "type": "string",
                    "example": "mua_sam"
                },
                "id": {
                    "type": "string",
                    "example": "id"
                },
                "name": {
                    "type": "string",
                    "example": "MyBankAccount"
                },
                "type": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}