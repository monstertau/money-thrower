basePath: /api/v1
definitions:
  controller.AppError:
    properties:
      args:
        example:
        - "null"
        items:
          type: string
        type: array
      code:
        example: 400
        type: integer
      message:
        example: invalid form
        type: string
    type: object
  view.AddTransactionForm:
    properties:
      amount:
        type: number
      cat_id:
        type: string
      note:
        type: string
      transaction_date:
        type: integer
      wallet_id:
        type: string
    required:
    - amount
    - cat_id
    - wallet_id
    type: object
  view.BudgetForm:
    properties:
      amount:
        type: number
      cat_id:
        type: string
      end_date:
        type: integer
      id:
        type: string
      spent_amount:
        type: number
      start_date:
        type: integer
      status:
        type: integer
      user_id:
        type: string
      wallet_id:
        type: string
    type: object
  view.CategoryForm:
    properties:
      icon:
        example: tool
        type: string
      id:
        example: id
        type: string
      is_expense:
        example: false
        type: boolean
      name:
        example: Food
        type: string
      parent_cat_id:
        example: id
        type: string
      type:
        example: 1
        type: integer
    type: object
  view.EditTransactionForm:
    properties:
      amount:
        type: number
      cat_id:
        type: string
      note:
        type: string
      transaction_date:
        type: integer
      transaction_id:
        type: string
    required:
    - amount
    - cat_id
    - transaction_id
    type: object
  view.FilterTransactionForm:
    properties:
      cat_id:
        example: f3b91567-3496-4d9b-9f1e-ca69c92b89a6
        type: string
      end_amount:
        example: 999999
        type: number
      end_date:
        example: 1936206829000
        type: integer
      key_note:
        example: mua
        type: string
      start_amount:
        example: 1
        type: number
      start_date:
        example: -1036206827000
        type: integer
      wallet_id:
        example: dda1d792-337b-476b-adbc-f81b06baa0d0
        type: string
    type: object
  view.ForgotPasswordForm:
    properties:
      email:
        example: test@gmail.com
        type: string
    type: object
  view.LoginForm:
    properties:
      email:
        example: dungsieuvip2012@gmail.com
        type: string
      password:
        example: "12345678"
        type: string
    type: object
  view.RegisterForm:
    properties:
      email:
        example: test@gmail.com
        type: string
      id:
        example: id
        type: string
      password:
        example: test
        type: string
      token:
        example: token-string
        type: string
    type: object
  view.SubmitNewPasswordForm:
    properties:
      email:
        example: test@gmail.com
        type: string
      password:
        example: test
        type: string
      token:
        example: token-string
        type: string
    type: object
  view.TokenValidateForm:
    properties:
      email:
        example: test@gmail.com
        type: string
      token:
        example: token-string
        type: string
    type: object
  view.TransactionForm:
    properties:
      amount:
        type: number
      cat_id:
        type: string
      note:
        type: string
      transaction_date:
        type: integer
      transaction_id:
        type: string
      user_id:
        type: string
      wallet_id:
        type: string
    type: object
  view.WalletBalanceByTimeForm:
    properties:
      end_balance:
        example: 0
        type: number
      end_date:
        example: 1936206828000
        type: integer
      id:
        example: id
        type: string
      start_balance:
        example: 0
        type: number
      start_date:
        example: 1636206838000
        type: integer
    type: object
  view.WalletForm:
    properties:
      balance:
        example: 1500000
        type: number
      currency:
        example: VND
        type: string
      icon:
        example: mua_sam
        type: string
      id:
        example: id
        type: string
      name:
        example: MyBankAccount
        type: string
      type:
        example: 1
        type: integer
    type: object
host: api.moneythrower.site
info:
  contact:
    email: trungdungvu172@gmail.com
    name: Trung Dung Vu
  description: This is API Documentation of Money Thrower Core
  title: Money Thrower Core API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login with account
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/view.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.LoginForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      summary: Login with email and password
      tags:
      - authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout and push JWT Token into blacklist for 72 hours
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Logout and push JWT Token into blacklist for 72 hours
      tags:
      - authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register with email and password
      parameters:
      - description: Register with account
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/view.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.RegisterForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      summary: Register with email and password
      tags:
      - authentication
  /budget/:
    get:
      consumes:
      - application/json
      description: Get list of budgets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.BudgetForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get list of budgets
      tags:
      - budget
  /budget/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a budget
      parameters:
      - description: budget id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Delete a budget
      tags:
      - budget
    get:
      consumes:
      - application/json
      description: Get detail information of a budget by id
      parameters:
      - description: budget id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.BudgetForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get detail information of a budget by id
      tags:
      - budget
  /category:
    get:
      consumes:
      - application/json
      description: Return list of category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.CategoryForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get list category with paging
      tags:
      - category
    post:
      consumes:
      - application/json
      description: Add a new category
      parameters:
      - description: Create category
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/view.CategoryForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.CategoryForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Add a new category
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Edit info of a category
      parameters:
      - description: Update category
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/view.CategoryForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.CategoryForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Edit info of a category
      tags:
      - category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Return result detail
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Delete specific category by id
      tags:
      - category
    get:
      consumes:
      - application/json
      description: Return category detail
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.CategoryForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get specific category by id
      tags:
      - category
  /dummy:
    get:
      consumes:
      - application/json
      description: Dummy test connection and token
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Hello World"}'
          schema:
            type: object
      security:
      - JWT: []
      summary: Dummy test connection and token
      tags:
      - testing
  /password/change:
    post:
      consumes:
      - application/json
      description: Submit token, new password, email to reset password. Token and
      parameters:
      - description: Submit token, new password, email to reset password
        in: body
        name: ForgotPassword
        required: true
        schema:
          $ref: '#/definitions/view.SubmitNewPasswordForm'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": true}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      summary: Submit token, new password, email to reset password
      tags:
      - password management
  /password/forgot:
    post:
      consumes:
      - application/json
      description: Submit email for sending reset password email
      parameters:
      - description: Submit email for reset password (Must be valid email)
        in: body
        name: ForgotPassword
        required: true
        schema:
          $ref: '#/definitions/view.ForgotPasswordForm'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": true}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      summary: Submit email for sending reset password email
      tags:
      - password management
  /password/validate:
    post:
      consumes:
      - application/json
      description: Validate Token before display change password form
      parameters:
      - description: Submit token, email to reset password
        in: body
        name: ForgotPassword
        required: true
        schema:
          $ref: '#/definitions/view.TokenValidateForm'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": true}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      summary: Validate Token before display change password form
      tags:
      - password management
  /transaction/:
    post:
      consumes:
      - application/json
      description: Add new transaction
      parameters:
      - description: Get transaction
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/view.AddTransactionForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.AddTransactionForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Add new transaction
      tags:
      - transaction
    put:
      consumes:
      - application/json
      description: Edit a transaction
      parameters:
      - description: Get transaction
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/view.EditTransactionForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.EditTransactionForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Edit a transaction
      tags:
      - transaction
  /transaction/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a transaction
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Delete a transaction
      tags:
      - transaction
    get:
      consumes:
      - application/json
      description: Get detail information of a transaction by id
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.TransactionForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get detail information of a transaction by id
      tags:
      - transaction
  /transaction/filter:
    post:
      consumes:
      - application/json
      description: Get list of transactions based on filter
      parameters:
      - description: Get filtered transaction list
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/view.FilterTransactionForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.TransactionForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get list of transactions based on filter
      tags:
      - transaction
  /wallet:
    get:
      consumes:
      - application/json
      description: Return list of wallet
      parameters:
      - description: offset of list wallet want to specify, default 0
        in: query
        name: from
        type: integer
      - description: limit of list wallet want to specify, default 10
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.WalletForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get list wallet with paging
      tags:
      - wallet
    post:
      consumes:
      - application/json
      description: Add a new wallet
      parameters:
      - description: Create wallet
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/view.WalletForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.WalletForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Add a new wallet
      tags:
      - wallet
    put:
      consumes:
      - application/json
      description: Edit info of a wallet
      parameters:
      - description: Update wallet
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/view.WalletForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.WalletForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Edit info of a wallet
      tags:
      - wallet
  /wallet/{id}:
    delete:
      consumes:
      - application/json
      description: Return result detail
      parameters:
      - description: wallet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Delete specific wallet by id
      tags:
      - wallet
    get:
      consumes:
      - application/json
      description: Return wallet detail
      parameters:
      - description: wallet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.WalletForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: Get specific wallet by id
      tags:
      - wallet
  /wallet/balance:
    post:
      consumes:
      - application/json
      description: get start and end balance of a wallet by a time range
      parameters:
      - description: Get Balance
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/view.WalletBalanceByTimeForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.WalletBalanceByTimeForm'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.AppError'
      security:
      - JWT: []
      summary: get start and end balance of a wallet by a time range
      tags:
      - wallet
schemes:
- https
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
